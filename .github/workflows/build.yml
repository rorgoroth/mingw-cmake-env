name: build
on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: setup_alpine
        uses: jirutka/setup-alpine@v1
        with:
          branch: edge

      - name: add_packages
        run: |
          rm /var/cache/apk/*
          apk add 7zip autoconf automake bash ccache clang cmake coreutils curl diffutils g++ gawk gcc gettext-dev git gperf libtool lld llvm llvm-linker-tools make meson mimalloc2-insecure musl-dev nasm patch pkgconf po4a py3-jinja2 py3-mako samurai texinfo util-linux-misc yasm
        shell: alpine.sh --root {0}

      - name: setup_git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
        shell: alpine.sh --root {0}

      - name: load_cache_build
        uses: actions/cache/restore@main
        with:
          path: build
          key: cached_build

      - name: load_cache_ltocache
        uses: actions/cache/restore@main
        with:
          path: build/install/x86_64-w64-mingw32/ltocache
          key: ltocache

      - name: load_cache_ccache
        uses: actions/cache/restore@main
        with:
          path: build/install/x86_64-w64-mingw32/ccache
          key: ccache

      - name: setup_cmake
        run: |
          cmake -Bbuild -G Ninja -DCPUTUNE=x86-64-v3 -DOPTIM=O2
        shell: alpine.sh {0}

      - name: run_update
        run: |
          ninja -C build update
        shell: alpine.sh {0}

      - name: run_build
        run: |
          ninja -C build llvm
          ninja -C build quake2pro
          ninja -C build quake3e
          ninja -C build quake3e-openarena
          ninja -C build quake3e-urbanterror
          ninja -C build xonotic
          ninja -C build ffmpeg
          ninja -C build mpv
        shell: alpine.sh {0}

      - name: clear_cache
        uses: easimon/wipe-cache@main

      - name: save_cache_ltocache
        uses: actions/cache/save@main
        with:
          path: build/install/x86_64-w64-mingw32/ltocache
          key: ltocache

      - name: save_cache_ccache
        uses: actions/cache/save@main
        with:
          path: build/install/x86_64-w64-mingw32/ccache
          key: ccache

      - name: run_clean_lto-ccache_cache
        run: |
          bash -c "rm -rf build/install/x86_64-w64-mingw32/ltocache"
          bash -c "rm -rf build/install/x86_64-w64-mingw32/ccache"
        shell: alpine.sh {0}

      - name: save_cache_build
        uses: actions/cache/save@main
        with:
          path: build
          key: cached_build

      - name: run_pkg
        run: |
          sh run.sh package
          sh run.sh archive
        shell: alpine.sh {0}

      - name: gather_logs
        if: always()
        run: |
          mkdir -p logs
          cp -fr $(find build -type f -iname "*-out.log") logs/ || true
          cp -fr $(find build -type f -iname "*-err.log") logs/ || true
        shell: alpine.sh {0}

      - name: upload_logs
        uses: actions/upload-artifact@master
        if: always()
        with:
          name: build-logs
          path: logs/
          compression-level: 9

      - name: upload_pkg_artifacts
        uses: actions/upload-artifact@master
        with:
          name: pkg-artifacts
          path: bin/*-package
          compression-level: 0

      - name: Delete tag
        run: gh release delete latest --cleanup-tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: upload_packages
        uses: svenstaro/upload-release-action@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: bin/*.7z
          tag: latest
          overwrite: true
          file_glob: true
